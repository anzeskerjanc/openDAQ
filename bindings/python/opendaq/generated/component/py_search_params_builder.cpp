//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (PythonGenerator).
// </auto-generated>
//------------------------------------------------------------------------------

/*
 * Copyright 2022-2023 Blueberry d.o.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "py_opendaq/py_opendaq.h"
#include "py_core_types/py_converter.h"

PyDaqIntf<daq::ISearchParamsBuilder, daq::IBaseObject> declareISearchParamsBuilder(pybind11::module_ m)
{
    return wrapInterface<daq::ISearchParamsBuilder, daq::IBaseObject>(m, "ISearchParamsBuilder");
}

void defineISearchParamsBuilder(pybind11::module_ m, PyDaqIntf<daq::ISearchParamsBuilder, daq::IBaseObject> cls)
{
    cls.doc() = "";

    m.def("SearchParamsBuilder", &daq::SearchParamsBuilder_Create);
    m.def("SearchParamsBuilderCopy", &daq::SearchParamsBuilderCopy_Create);

    cls.def("build",
        [](daq::ISearchParamsBuilder *object)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            return objectPtr.build().detach();
        },
        "");
    cls.def_property("recursive",
        [](daq::ISearchParamsBuilder *object)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            return objectPtr.getRecursive();
        },
        [](daq::ISearchParamsBuilder *object, const bool recursive)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            objectPtr.setRecursive(recursive);
        },
        "");
    cls.def_property("visible_only",
        [](daq::ISearchParamsBuilder *object)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            return objectPtr.getVisibleOnly();
        },
        [](daq::ISearchParamsBuilder *object, const bool visibleOnly)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            objectPtr.setVisibleOnly(visibleOnly);
        },
        "");
    cls.def_property("required_tags",
        [](daq::ISearchParamsBuilder *object)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            return objectPtr.getRequiredTags().detach();
        },
        [](daq::ISearchParamsBuilder *object, daq::IList* tags)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            objectPtr.setRequiredTags(tags);
        },
        py::return_value_policy::take_ownership,
        "");
    cls.def_property("excluded_tags",
        [](daq::ISearchParamsBuilder *object)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            return objectPtr.getExcludedTags().detach();
        },
        [](daq::ISearchParamsBuilder *object, daq::IList* tags)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            objectPtr.setExcludedTags(tags);
        },
        py::return_value_policy::take_ownership,
        "");
    cls.def_property("search_id",
        [](daq::ISearchParamsBuilder *object)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            return objectPtr.getSearchId();
        },
        [](daq::ISearchParamsBuilder *object, daq::IntfID id)
        {
            const auto objectPtr = daq::SearchParamsBuilderPtr::Borrow(object);
            objectPtr.setSearchId(id);
        },
        "");
}
